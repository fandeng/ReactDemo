import React, { Component } from 'react';
import {Provider} from 'react-redux';
import store from './store/store';
// import App from './demo/demo';
import App from './containers/app';
import {
  AppRegistry,
} from 'react-native';
import Storage from 'react-native-storage';
import { AsyncStorage } from 'react-native';
import SplashScreen from 'react-native-splash-screen'

var storage = new Storage({
  // 最大容量，默认值1000条数据循环存储
  size: 1000,

  // 存储引擎：对于RN使用AsyncStorage，对于web使用window.localStorage
  // 如果不指定则数据只会保存在内存中，重启后即丢失
  storageBackend: AsyncStorage,

  // 数据过期时间，默认一整天（1000 * 3600 * 24 毫秒），设为null则永不过期
  defaultExpires: null,

  // 读写时在内存中缓存数据。默认启用。
  enableCache: true,

  // 如果storage中没有相应数据，或数据已过期，
  // 则会调用相应的sync同步方法，无缝返回最新数据。
  sync: {
    // 同步方法的具体说明会在后文提到
  }
})

export default class Root extends Component {
  componentDidMount() {
      SplashScreen.hide();//关闭启动屏幕
  }
	constructor(props) {
	  super(props);
	   global.USER_INFO='userinfo';
	  global.storage=storage;
    global.isLogin=false;
    global.checkLoginStatus = (callBack)=>{
        storage.load({
           key: USER_INFO,
           syncInBackground: true,
         }).then(ret=>{
            global.isLogin=true;
            callBack();
         }).catch(err => {
          console.warn(err.message);
            switch (err.name) {

                case 'NotFoundError':
                    global.isLogin=false;
                    callBack();
                    break;
                case 'ExpiredError':
                    return false;
                    break;
            }})
    };
	}
  render() {
    return (
      <Provider store = {store}>
        <App/>
      </Provider>
    )

  }


}
