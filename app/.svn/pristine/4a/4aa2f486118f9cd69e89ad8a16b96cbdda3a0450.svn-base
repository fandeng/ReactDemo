//首页
import React, { Component} from 'react';
import {
    StyleSheet,
    Text,
    ScrollView,
    ListView,
    View,
    Image,
    Alert,
    Platform,
    InteractionManager,
    Dimensions,
    TouchableOpacity,
} from 'react-native';

import Common from '../common/common';
import HeaderView from '../common/HeaderView';
import ViewPager from 'react-native-viewpager';
import ApplyVC from '../pages/ApplyMineInformation';
import WebViewDetails from '../components/WebDetails'
import MessageVC from '../pages/MessageVC';
import ResponseData from '../Data/Response.json';
import REQUEST_JSON from '../Data/Request.json';
import Login from  '../pages/Login';

import Style from '../style/style';

var DataRepository = require('../Data/DataRepository');
var repository = new DataRepository();

import ChooseLoan from '../pages/ChooseLoan';

//轮播图片
let webUrlArray =['http://www.xiaodatech.com/fh-web/article/discovery?discoveryId=119',
                  'http://www.xiaodatech.com/fh-web/article/discovery?discoveryId=120',
                  'http://www.xiaodatech.com/fh-web/article/discovery?discoveryId=121'
                  ];
let coverArray= [require("../img/homebg1.png"),require("../img/homebg2.png"),require("../img/homebg3.png")];
class HomePage extends Component {
  constructor(props) {
      super(props);
      this._renderRow = this.renderRow.bind(this);
      this._renderPage = this._renderPage.bind(this);
      var listdataSource= new ListView.DataSource({
            rowHasChanged: (row1, row2) => row1 !== row2,
      });
      var vpdataSource = new ViewPager.DataSource({
            pageHasChanged: (p1, p2) => p1 !== p2,
        });
        // 实际的DataSources存放在state中
        this.state = {
            listdataSource:listdataSource.cloneWithRows(ResponseData.queryloanproducts.response_body.products),
            vpdataSource: vpdataSource.cloneWithPages(ResponseData.querydiscoveryinfo1.response_body.discoverylist),
            data:ResponseData.querysysmsgs1.response_body.msgs[0]
        }
        console.disableYellowBox = true;
        console.warn('YellowBox is disabled.');
  }
  render() {
      this.requesttop();
      this.requestnotice();
      this.request();
      return(
         <View>
          <HeaderView  titleView= {'哗啦贷'}
          rightButton={'home'}
          collectIconAction={ this.onClickMessage.bind(this) }/>
          {
            <ScrollView style = {{width:Common.window.width,height:Common.window.height-64-49,backgroundColor:'#f0f1f2'}}>
              <View style={styles.topView_style}>
                 <ViewPager
                  style={{height:(Common.window.height-64)/3-10}}
                  dataSource={this.state.vpdataSource}
                  renderPage={this._renderPage}
                  isLoop={true}
                  autoPlay={true}/>
                  <View style={styles.notice_style}>
                      <Image style={styles.noticeImg_style} source={require("../img/notice.png")}/>
                      <Text style={[Style.mainBody,{marginLeft:10}]}>{this.state.data.title}</Text>
                  </View>
              </View>

              <View style={styles.midView_style}>
                 <TouchableOpacity style={styles.center}
                 activeOpacity={0.5}
								 onPress = {() => this.onClickMidItems(0)}>
                    <View style={{width:90,height:90}}>
                      <Image style = {styles.midView_child} source={require('../img/swiper_1.jpg')}/>
                      <View style={{marginBottom: 0,position: 'absolute',left: 10,right: 0,top:0}}>
                        <Text style={styles.midView_text}>我要还款</Text>
                      </View>
                    </View>
							   </TouchableOpacity>

                 <TouchableOpacity style={styles.center}
                 activeOpacity={0.5}
								 onPress = {() => this.onClickMidItems(1)}>
                      <View style={{width:90,height:90}}>
                        <Image style = {styles.midView_child} source={require('../img/swiper_2.jpg')}/>
                        <View style={{marginBottom: 0,position: 'absolute',left: 10,right: 0,top:0}}>
                          <Text style={styles.midView_text}>查询进度</Text>
                        </View>
                      </View>
							   </TouchableOpacity>

                 <TouchableOpacity style={styles.center}
                 activeOpacity={0.5}
								 onPress = {() => this.onClickMidItems(2)}>
                    <View style={{width:90,height:90}}>
                      <Image style = {styles.midView_child} source={require('../img/swiper_3.jpg')}/>
                      <View style={{marginBottom: 0,position: 'absolute',left: 10,right: 0,top:0}}>
                        <Text style={styles.midView_text}>利率计算</Text>
                      </View>
                    </View>
							   </TouchableOpacity>
              </View>

              <ListView
                  dataSource={this.state.listdataSource}
                  renderRow={this._renderRow}
                  enableEmptySections={true}
                  style={{height: 160*4}}//减去导航的高度
              />
            </ScrollView>
          }
         </View>
    );
  }
  renderRow(rowDate,sectionID, rowID, highlightRow) {
    return (
    <View style={{width:Common.window.width-30,alignItems: 'center',marginTop:15,height: 150,borderRadius:8,backgroundColor:'white',marginLeft:15}}>
        <Image style={styles.bottomView_style} source={coverArray[rowID]}/>
        <View style={{marginBottom: 0,position: 'absolute',left: 0,right: 0,top:0}}>
            <View style={{height:20,marginTop:10,alignItems:'center',flexDirection:'row'}}>
                <Image style={[styles.bottomView_Img,{marginLeft:10}]} source={require("../img/left_blue_line.png")}/>
                <Text style={[Style.whiteText_style, {width:80,marginLeft:5,marginRight:5}]}>{rowDate.name}</Text>
                <Image style={[styles.bottomView_Img,{marginRight:10}]} source={require("../img/right_blue_line.png")}/>
            </View>

            <View style={styles.bottom_child}>
                <View style={styles.bottomchild_style}>
                    <Text style={[Style.whiteText_style,{width:(Common.window.width-50)/2,marginTop:20,color:'#ffb852'}]}>{rowDate.quota_min}~{rowDate.quota_max}</Text>
                    <Text style={[Style.whiteText_style,{width:(Common.window.width-50)/2,marginTop:10}]}>借款额度(元）</Text>
                </View>
                <View style={{marginTop:5,backgroundColor:'rgba(255.0, 255.0, 255.0, 0.5)',width:1,height:70}}/>
                <View style={styles.bottomchild_style}>
                    <Text style={[Style.whiteText_style,{width:(Common.window.width-50)/2,marginTop:15}]}>借款周期(月) {rowDate.term_min}~{rowDate.term_max}个</Text>
                    <TouchableOpacity style={styles.center}
                      activeOpacity={0.5}
                      onPress = {() => this.onPressApply(rowID)}>
                      <View style = {[Style.button_style,{marginTop:10,marginLeft:15,width:(Common.window.width-50)/2-30,height:30,}]}>
                         <Text style={{color:'white',fontSize:15}}>立即借款</Text>
                      </View>
                    </TouchableOpacity>
                </View>
            </View>
        </View>
        <Text style={[Style.subtitle,{marginTop:5,textAlign:'center'}]}>{rowDate.summary}</Text>
    </View>
    );
  }
  //轮播图
  _renderPage(data,pageID) {
       return (
         <TouchableOpacity style={styles.center}
         activeOpacity={0.5}
         onPress={this.viewPagerCheck.bind(this,data)}>
             <Image  source={{uri:data.cover}} style={styles.swiperImage_style}/>
         </TouchableOpacity>
       );
   }
  //点击事件
  onClickMessage(){
    checkLoginStatus(()=>{
        if (isLogin) {
             InteractionManager.runAfterInteractions(() => {
                  this.props.navigator.push({
                      name: '消息',
                      component: MessageVC,
                  })
              });

        }else{

              InteractionManager.runAfterInteractions(() => {
                    this.props.navigator.push({
                      name:'',
                        component: Login,
                        passProps:{
                            nextComponent:undefined,
                        }
                    })
                  });
        }

    });

  }
  onPressApply(id) {
    let money={'max':0,'min':0}
    let dates=[1,2,3];
    if (id==0) {
        money.max=1000;
        money.min=100;
    }else if (id==1) {
        money.max=5000;
        money.min=1000;
        dates=[3,4,6];
    }else{
        money.max=10000;
        money.min=5000;
        dates=[6,9,12];
    }
    checkLoginStatus(()=>{
        if (isLogin) {
            InteractionManager.runAfterInteractions(() => {
                this.props.navigator.push({
                    name: '流程',
                    component: ChooseLoan,
                    passProps:{
                      'money':money,
                      'dates':dates,
                    }
                })
          });
        }else{
             InteractionManager.runAfterInteractions(() => {
                    this.props.navigator.push({
                      name:'',
                        component: Login,
                        passProps:{
                            nextComponent:undefined,
                        }
                    })
                  });
        }
    })

  }
  viewPagerCheck(data) {
    InteractionManager.runAfterInteractions(() => {
        this.props.navigator.push({
            name: '详情',
            component: WebViewDetails,
            passProps:{
              info:data.serviceurl,
            }
        })
    });
  }
  onClickMidItems(index){
    checkLoginStatus(()=>{
      if (isLogin) {
           InteractionManager.runAfterInteractions(() => {
              this.props.navigator.push({
                  name: '详情',
                  component: WebViewDetails,
                  passProps:{
                    info:webUrlArray[index],
                  }
              })
            });

      }else{
           InteractionManager.runAfterInteractions(() => {
                      this.props.navigator.push({
                            name:'',
                            component: Login,
                            passProps:{
                                nextComponent:undefined,
                            }
                      })
            });

      }
    })

  }
  gottoLogin(){
    InteractionManager.runAfterInteractions(() => {
      this.props.navigator.push({
          name: '详情',
          component: Login,

      })
    });
  }
  request() {
      var queryloanproducts = REQUEST_JSON.queryloanproducts;
      queryloanproducts.pagenum = '1';
      queryloanproducts.pagesize = '20';
      repository.launchRequest('queryloanproducts',queryloanproducts).then((responseData) => {
          console.log(responseData.response_body);
      }).done();
  }
  //此处调真实接口，需要改动
  requesttop() {
      var querydiscoveryinfo = REQUEST_JSON.querydiscoveryinfo;
      querydiscoveryinfo.userid = '123';
      querydiscoveryinfo.pushpage = '1';
      querydiscoveryinfo.pagenum = '1';
      querydiscoveryinfo.pagesize = '20';
      repository.launchRequest('querydiscoveryinfo1',querydiscoveryinfo).then((responseData) => {
          console.log(responseData.response_body);
      }).done();
  }
  //消息
  requestnotice() {
      var querysysmsgs = REQUEST_JSON.querysysmsgs;
      querysysmsgs.msgtype = '2';
      querysysmsgs.pagenum = '1';
      querysysmsgs.pagesize = '20';
      repository.launchRequest('querysysmsgs1',querysysmsgs).then((responseData) => {
          console.log(responseData.response_body);
      }).done();
  }
}
const styles = StyleSheet.create({
    topView_style:{
      width:Common.window.width,
      height:(Common.window.height-64)/3+30,
      backgroundColor:'white'
    },
    swiperImage_style: {
      height:(Common.window.height-64)/3,
      width:Common.window.width
    },
    notice_style:{
      width:Common.window.width,
      height:40,
      flexDirection: 'row',
      alignItems: 'center'
    },
    noticeImg_style:{
      width:22,
      height:20,
      marginLeft:10,
    },
    midView_style:{
      width:Common.window.width-20,
      height:100,
      marginLeft:10,
      marginTop:10,
      flexDirection:'row',
      justifyContent:'space-around',
      alignItems:'center'
    },
    midView_child:{
      width:90,
      height:90,
      alignItems:'center',
      borderRadius:8,
    },
    center:{
       flexDirection: 'row',
       justifyContent: 'center',
       alignItems: 'center',
    },
    midView_text:{
      fontSize:14,
      marginTop:40,
      color:'#333333',
      backgroundColor:'rgba(255.0, 255.0, 255.0, 0)',
      textAlign:'center'
    },
    midView_image:{
      width:50,
      height:50,
      marginTop:10
    },
    bottomView_style:{
      width:Common.window.width-30,
      height:120,
      resizeMode: 'stretch',
      alignItems: 'stretch',
      flexDirection: 'row',
      justifyContent: 'flex-start',
      marginBottom: 0,
      borderRadius:5,
    },
    bottomView_Img:{
      width:(Common.window.width-30-80-30)/2,
      height:5,
    },
    bottom_child:{
      height:80,
      marginTop:5,
      marginLeft:10,
      marginRight:10,
      alignItems:'center',
      flexDirection:'row',
    },
    bottomchild_style:{
      height:80,
      width:(Common.window.width-50)/2,
      alignItems:'center',
    },
});
module.exports = HomePage;
