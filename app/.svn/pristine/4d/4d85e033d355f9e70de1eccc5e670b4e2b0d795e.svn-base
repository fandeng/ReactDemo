import React,{Component} from 'react';
import{
	StyleSheet,
	Text,
	View,
	BackAndroid,
	Platform,
	TouchableOpacity,
	Image,
TextInput,
	ScrollView,
} from 'react-native';

import Common from '../common/common';
import Register from '../pages/Register';

import REQUEST_JSON from '../Data/Request.json';
var DataRepository = require('../Data/DataRepository');
var repository = new DataRepository();
var  Response =require('../Data/Response');


var showNum='获取验证码';
var Radius=10;   //圆角角度


export default class Login extends Component{
	constructor(props) {
	  super(props);
	
	  this.state = {
	  	sum:60,
	  };
	}
	render(){
		
		return (
			
				<View style={{backgroundColor:'#cccccc',flex:1,paddingLeft:30,paddingRight:30} }>
					<TouchableOpacity style={{height:50,justifyContent: 'center',alignItems: 'flex-end'}} onPress = {this.onClick.bind(this,0)}>
						<Text style={{color:'#1a98ff'}}>注册</Text>
					</TouchableOpacity>
					<View style={{height:200,justifyContent: 'center',alignItems: 'center'}}>
						<Image style={{}} source={require('../img/emergencyContact.png')}>
						</Image>
					</View>

					<View style={{height:120,flexDirection:'column',justifyContent: 'flex-start'}}>
						<View  style={styles.phone_style}>
							<Image style = {{height:24,width:16,marginLeft:15}} source={require('../img/phone.png')}/>
							<TextInput
					          style={styles.style_input}
					          placeholder="请输入手机号"
					          underlineColorAndroid={'transparent'} 
					          numberOfLines={1}
					          onChangeText={(text) => this.setState({text})}
					        />
						</View>

						<View style={{height:1,backgroundColor:'#D3D3D3',alignItems:'center'}}></View>

						<View  style={styles.password_style}>
							<Image style = {{height:24,width:16,marginLeft:15}} source={require('../img/phone.png')}/>
							
							<TextInput
					          style={styles.style_input}
					          placeholder="请输入密码"
					          underlineColorAndroid={'transparent'} 
					          numberOfLines={1}
					          secureTextEntry={true}
					          onChangeText={(text) => this.setState({text})}
					        />
					    
						</View>
					</View>

					<View style={{height:50,alignItems:'center',marginTop:40}}>
						<TouchableOpacity style={[styles.button,{width: Common.window.width-60,backgroundColor: '#1a98ff',height:40}]}
									onPress = {this.onClick.bind(this,2)}>
									<Text style={{textAlign:'center'}}>登陆</Text>
								</TouchableOpacity>

					</View>

					
				</View>
			)
	}


	onClick(item){
		if (item==0) {
			this.props.navigator.push({
						name: '二级',
						component: Register,
				})
		}
		if (item==1) {
			if (!this.isNull(this.state.text) && !this.isNotPhoneNum(this.state.text)) {
			this.interval=setInterval(() => {
				showNum='剩余'+this.state.sum+'S';
					if (this.state.sum==0) {
						 this.interval && clearInterval(this.interval);
						 this.setState({sum:60});
						 showNum='获取验证码';
					}
				this.setState({sum:(this.state.sum-1)});
				
   				}
   				,1000);
   			}else{
   				if (this.isNull(this.state.text)) {
   					alert('请输入手机号码');
   				}else{
   					if (this.isNotPhoneNum(this.state.text)) {
   						alert('请输入正确的手机号码');
   					}
   				}
   				
   				
   			}
		}


		if (item==2) {
			 this.interval && clearInterval(this.interval);
		}

		// if (item==3) {
		// 	let select=!this.state.isSelect;
		// 	this.setState({
		// 		isSelect:select,
		// 	})
		// }

		if (item==4) {
			storage.load({
					 key: 'userinfo',
					 syncInBackground: true,
				 }).then(ret=>{
					alert(ret.response_body.name+ret.response_body.address);
				 }).catch(err => {console.warn(err.message);
				    switch (err.name) {
				        case 'NotFoundError':
				            // TODO;
				            break;
				        case 'ExpiredError':
				            // TODO
				            break;
				    }})
		}
		
	}

	request(id) {
        var queryloandetail = REQUEST_JSON.querydictionarydata;
        
        repository.launchRequest('queryloandetail',queryloandetail).then((responseData) => {
        	console.log('request  response======>'+responseData.response_body);
            this.setState({
					data:responseData.response_body
				})
        }).done();
    }



	isNull(str){ 
		if ( str == "" ) {return true; }
		var regu = "^[ ]+$"; 
		var re = new RegExp(regu); 
		return re.test(str); 
	} 
	isNotPhoneNum(str){
		var regu='^(1[2-9])\\d{9}$';
		var re = new RegExp(regu); 
		return !re.test(str); 
	}
}







var styles =StyleSheet.create({
	view_style:{flex:1,justifyContent: 'flex-end',flexDirection:'row',height:60},
	input_style:{ marginTop: 10,
    height: 40,
    borderRadius: 5,
   borderWidth: 1,
    borderColor: 'lightblue'},

     style_input:{  
      backgroundColor:'#fff',
      height:35,
      flex:1,
  },

   button_vertify: {height:35,width:90,borderColor:'#1a98ff',
   			marginRight:20, alignItems:'center',
   			justifyContent: 'center', borderRadius: 10,
   			borderWidth:1
   			},
   	 button: {
        width: 90,
		height:30,
        backgroundColor: '#999999',
        alignItems:'center',justifyContent: 'center',
        borderRadius: 10,
		
    },
    phone_style:{flex:1,flexDirection:'row',justifyContent:'center',alignItems:'center'
			    ,borderTopLeftRadius:Radius,borderTopRightRadius:Radius
			    ,borderColor:'#ffffff', backgroundColor:'#FFFFFF'},

	password_style:{flex:1,flexDirection:'row',justifyContent:'center',alignItems:'center'
					,borderBottomLeftRadius:Radius,borderBottomRightRadius:Radius
					, borderColor:'#ffffff',backgroundColor:'#FFFFFF'}
});
