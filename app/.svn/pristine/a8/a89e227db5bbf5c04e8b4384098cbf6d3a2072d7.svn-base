//消息界面
import React, {
    Component
} from 'react';
import {
    StyleSheet,
    Text,
    Image,
    ListView,
    TouchableOpacity,
    View,
    InteractionManager,
    Dimensions,
    TextInput,
    Platform,
} from 'react-native';

import Common from '../common/common';
import HeaderView from '../common/HeaderView';
import WebViewDetails from '../components/WebDetails'
import ResponseData from '../Data/Response.json';
import REQUEST_JSON from '../Data/Request.json';

var DataRepository = require('../Data/DataRepository');
var repository = new DataRepository();

class MessageVC extends Component {
  constructor(props) {
      super(props);
      this._renderRow = this.renderRow.bind(this);
      this.state = {
        data:ResponseData.querysysmsgs.response_body,
        dataSource: new ListView.DataSource({
            rowHasChanged: (row1, row2) => row1 !== row2,
        }),
      };
  }
  render() {
    this.request();
      return (
          <View>
            <HeaderView  titleView= {'消息'}
            leftIcon={'angle-left'}
            leftIconAction={() => this.props.navigator.pop() }/>
            {
              <ListView
                  dataSource={this.state.dataSource.cloneWithRows(this.state.data.msgs) }
                  renderRow={this._renderRow}
                  enableEmptySections={true}
                  style={{ height: Common.window.height-64,backgroundColor:'#f0f1f2'}}//减去导航的高度
              />
            }
          </View>
      );
  }
  renderRow(rowDate,sectionID, rowID) {
      return (
          <TouchableOpacity
              activeOpacity={0.75}
              onPress={this._onPressFeedItem.bind(this, rowDate) }
              style={styles.center}>
              <View style = {styles.container}>
                  <View style={{height:30,alignItems:'center',flexDirection:'row',marginTop:10}}>
                     <Text style = {styles.title_style}>{rowDate.title}</Text>
                     <Text style = {styles.time_style}>{rowDate.time}</Text>
                  </View>
                  <Text style = {styles.content_style} numberOfLines = {3}>{rowDate.content}</Text>
             </View>
          </TouchableOpacity>
      );
  }
  _onPressFeedItem(rowDate, rowID) {
    InteractionManager.runAfterInteractions(() => {
        // this.props.navigator.push({
        //     name: '详情',
        //     component: WebViewDetails,
        //     passProps:{
        //       info:rowDate.linkurl,
        //     }
        // })
    });
  }
  request() {
      var querysysmsgs = REQUEST_JSON.querysysmsgs;
      querysysmsgs.msgtype = '1';
      querysysmsgs.pagenum = '1';
      querysysmsgs.pagesize = '20';
      repository.launchRequest('querysysmsgs',querysysmsgs).then((responseData) => {
          console.log(responseData.response_body);
      }).done();
  }
}

const styles = StyleSheet.create({
      center:{
         flexDirection: 'row',
         justifyContent: 'center',
         alignItems: 'center',
      },
      container: {
          width: Common.window.width,
          height:80,
          alignItems: 'center',
          backgroundColor: 'white',
          borderBottomColor: 'rgba(230.0, 230.0, 230.0, 1.0)',
          borderBottomWidth: 1,
      },
      title_style: {
        width:Common.window.width-100,
        textAlign: 'left',
        marginLeft: 10,
        fontSize:14,
        color:'#333333'
      },
      content_style: {
        width:Common.window.width-20,
        marginTop:5,
        textAlign: 'left',
        marginLeft: 10,
        fontSize:13,
        color:'#666666'
      },
      time_style:{
        width:70,
        marginLeft:10,
        marginRight:10,
        textAlign:'right',
        color:'#999999',
        fontSize:12
      }
});


module.exports = MessageVC;
