import React,{Component} from 'react';
import{
	StyleSheet,
	Text,
	View,
	BackAndroid,
	Platform,
	TouchableOpacity,
	Image,

	ScrollView,
} from 'react-native';
var ImagePicker = require('react-native-image-picker');
 // import ImagePickerManager from 'NativeModules';


import HeaderView from '../common/HeaderView';
import Common from '../common/common';
import InformationProgress from '../components/InformationProgress';
// import ImgTextComponent from '../components/ImgTextComponent';
var options = {
  title: 'Select Avatar', // 选择器的标题，可以设置为空来不显示标题
  cancelButtonTitle: 'Cancel',
  takePhotoButtonTitle: 'Take Photo...', // 调取摄像头的按钮，可以设置为空使用户不可选择拍照
  chooseFromLibraryButtonTitle: 'Choose from Library...', // 调取相册的按钮，可以设置为空使用户不可选择相册照片
  customButtons: {
    'Choose Photo from Facebook': 'fb', // [按钮文字] : [当选择这个按钮时返回的字符串]
  },
  mediaType: 'photo', // ‘photo‘ or ‘video‘
  videoQuality: 'high', // ‘low‘, ‘medium‘, or ‘high‘
  durationLimit: 10, // video recording max time in seconds
  maxWidth: 100, // photos only默认为手机屏幕的宽，高与宽一样，为正方形照片
  maxHeight: 100, // photos only
  allowsEditing: false, // 当用户选择过照片之后是否允许再次编辑图片
};


export default class MyDataDetial extends Component{

	constructor(props) {
	  super(props);
	
	  this.state = {
	  	avatarSource:require('../img/progress.png')
	  };
	}

	componentDidMount(){
 		BackAndroid.addEventListener('hardwareBackPress', () => {
    		this.props.navigator.pop()
     		return true
		});
	}

	render(){
		return (
			<View>
				<HeaderView 
					titleView= {'我的资料'}
		            leftIcon={'angle-left'}
		            leftIconAction={() => this.props.navigator.pop() }
				/>
				<View style={styles.contentContainer}>
					<View style={{backgroundColor:'#D3D3D3',height:70,alignItems:'center',justifyContent: 'center'}}>
						<Text style={{textAlign:'center',color:'#999999'}}>完成所需资料立即申请贷款</Text>
					</View>
				
					<InformationProgress/>
					<View style={{backgroundColor:'#D3D3D3',height:30}}></View>
					
					<View style={{flexDirection:'column',flex:1}}>
						<View style={{flexDirection:'row',flex:1}}>
							
							<TouchableOpacity style={styles.view_style}
									onPress = {this.onClick.bind(this,2)}>
							<Image style = {styles.img_style} source={require('../img/progress.png')}/>
							<Text key={'text'} style={styles.text_style}>个人信息</Text>
							</TouchableOpacity>
							
							<View style={[styles.line_style,{marginTop:10}]}></View>

							<TouchableOpacity style={styles.view_style}
									onPress = {this.onClick.bind(this,2)}>
							<Image style = {styles.img_style} source={require('../img/progress.png')}/>
							<Text key={'text'} style={styles.text_style}>单位信息</Text>
							</TouchableOpacity>
						</View>
						<View style={{height:1,backgroundColor:'#D3D3D3',alignItems:'center'}}></View>
						<View style={{flexDirection:'row',flex:1}}>
							<TouchableOpacity style={styles.view_style}
									onPress = {this.onClick.bind(this,3)}>
							
							<Image style = {styles.img_style} source={this.state.avatarSource}/>
							<Text key={'text'} style={styles.text_style}>拍照认证</Text>
							
							</TouchableOpacity>

							<View style={[styles.line_style,{marginBottom:10}]}></View>

							<TouchableOpacity style={styles.view_style}
									onPress = {this.onClick.bind(this,4)}>
							<Image style = {styles.img_style} source={require('../img/progress.png')}/>
							<Text key={'text'} style={styles.text_style}>紧急联系人</Text>
							</TouchableOpacity>
						</View>
					</View>
					
				</View>
			
			</View>
			);
	}

	onClick(item){
		// alert('askdkajs');
		// ImagePicker.launchImageLibrary
		if (item == 3) {
			
		
				ImagePicker.launchCamera(options, (response) => {
		  console.log('Response = ', response);

		  if (response.didCancel) {
		    console.log('User cancelled image picker');
		  }
		  else if (response.error) {
		    console.log('ImagePicker Error: ', response.error);
		  }
		  else if (response.customButton) {
		    console.log('User tapped custom button: ', response.customButton);
		  }
		  else {
		    // You can display the image using either data...
		    const source = {uri: 'data:image/jpeg;base64,' + response.data, isStatic: true};

		    // or a reference to the platform specific asset location
		    if (Platform.OS === 'ios') {
		      const source = {uri: response.uri.replace('file://', ''), isStatic: true};
		    } else {
		      const source = {uri: response.uri, isStatic: true};
		    }

		    this.setState({
		      avatarSource: source
		    });
		  }
			});
		}
	}
}



var styles =StyleSheet.create({
	contentContainer: {
      paddingVertical: 0,
      flexDirection:'column',
      flex:1,
      height: Platform.OS == 'ios'? Common.window.height-64:Common.window.height - 50,
    },
    view_style:{flex:1,alignItems: 'center',justifyContent: 'center',flexDirection:'column'},
    line_style:{width:1,backgroundColor:'#D3D3D3',alignItems:'center'},
	img_style:{height:80,width:80},
	text_style:{textAlign:'center',fontSize:18},
});